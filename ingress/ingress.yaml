apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
    name: public-ingress
    namespace: dev
    labels:
        app: public-ingress
    annotations:
        kubernetes.io/ingress.class: alb
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/security-groups: sg-0933ef62
        alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=120, deletion_protection.enabled=true, routing.http.drop_invalid_header_fields.enabled=true, routing.http2.enabled=true
        alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
        alb.ingress.kubernetes.io/success-codes: '200'
        alb.ingress.kubernetes.io/healthy-threshold-count: '2'
        alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
        alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
        alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
        alb.ingress.kubernetes.io/healthcheck-path: /
        alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30, slow_start.duration_seconds=0, stickiness.enabled=false
        alb.ingress.kubernetes.io/tags: Environment=dev
spec:
    rules:
        -   host: abc.com
            http:
                paths:
                    -   path: /
                        backend:
                            serviceName: kubia-env
                            servicePort: 80
                    -   path: /test
                        backend:
                            serviceName: kubia-env
                            servicePort: 80
                    
